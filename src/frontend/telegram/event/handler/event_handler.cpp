#include "event_handler.hpp"

EventHandler::EventHandler(TgBot::Bot& bot, std::shared_ptr<UserData> userData)
    : m_bot(bot), m_user(userData), m_messageHandler(std::make_shared<MessageHandler>(bot, userData)),
    m_inputProcessor(std::make_unique<InputProcessor>(userData)) { }

void EventHandler::Handle() {
    this->m_messageHandler->SendChatMessage("‚ö†Ô∏è –ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –í—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö.");
    this->m_messageHandler->SendChatMessage("üì≤ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –ª—é–±–æ–º —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.\n\n*–ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤.");

    this->InitEvents();
}

void EventHandler::InitEvents() {
    this->onCommandEvent("clear", [this](TgBot::Message::Ptr message)
    {
        if (!this->m_user->isInitialized()) {
            this->m_messageHandler->SendChatMessage("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–µ–π—á–∞—Å.\n\n–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.");
            return;
        }

        this->m_user->input->status->clear();
        this->m_messageHandler->SendChatMessage("‚ôª –í–∞—à–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å—Ç—ë—Ä—Ç—ã.\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, —É–∫–∞–∂–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ.");
    });
    this->onCommandEvent("execute", [this](TgBot::Message::Ptr message)
    {
        if (!this->m_user->isInitialized()) {
            this->m_messageHandler->SendChatMessage("‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–µ–π—á–∞—Å.\n\n–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.");
            return;
        }
    });

    this->onNonCommandMessageEvent([this](TgBot::Message::Ptr message)
    {
        if (!this->m_user->input->status->phoneEntered) {
            if (!this->m_inputProcessor->ProcessPhoneNumber(message->text)) {
                this->m_messageHandler->SendChatMessage("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É. –í —Å–ª—É—á–∞–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: @soamane");
                return;
            }

            this->m_messageHandler->SendChatMessage("üì≤ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å—á–∏—Ç–∞–Ω.");
            this->m_messageHandler->SendChatMessage("‚è≥ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –¥–ª—è –∞—Ç–∞–∫–∏. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100");

        } else if (!this->m_user->input->status->attackTimeEntered) {
            if (!this->m_inputProcessor->ProcessAttackTime(message->text)) {
                this->m_messageHandler->SendChatMessage("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.\n\n–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –í —Å–ª—É—á–∞–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: @soamane");
                return;
            }

            this->m_messageHandler->SendChatMessage("üé≤ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞—Ç–∞–∫–∏: " + std::to_string(m_user->input->attackTime) + "\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ø–∞–º –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /execute");
        }
    });
}

void EventHandler::onCommandEvent(std::string_view command, std::function<void(TgBot::Message::Ptr message)> func) {
    this->m_bot.getEvents().onCommand(command.data(), std::move(func));
}

void EventHandler::onNonCommandMessageEvent(std::function<void(TgBot::Message::Ptr message)> func) {
    this->m_bot.getEvents().onNonCommandMessage(std::move(func));
}

